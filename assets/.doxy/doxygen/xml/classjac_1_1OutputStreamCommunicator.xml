<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classjac_1_1OutputStreamCommunicator" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>jac::OutputStreamCommunicator</compoundname>
    <derivedcompoundref refid="classjac_1_1RouterOutputStreamCommunicator" prot="public" virt="non-virtual">jac::RouterOutputStreamCommunicator</derivedcompoundref>
    <includes refid="communicator_8h" local="no">communicator.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classjac_1_1OutputStreamCommunicator_1a4bf9e5a3b02c726c9d2d52bf22431e38" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool jac::OutputStreamCommunicator::put</definition>
        <argsstring>(uint8_t c)=0</argsstring>
        <name>put</name>
        <reimplementedby refid="classjac_1_1RouterOutputStreamCommunicator_1accbdfee5bf6561c903adfbe7e4e64eb2">put</reimplementedby>
        <param>
          <type>uint8_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Put a single byte to the stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte to put </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the byte was put successfully </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="27" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1OutputStreamCommunicator_1a3a33987605fdbf76e47d21f2d54a2e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t jac::OutputStreamCommunicator::write</definition>
        <argsstring>(std::span&lt; const uint8_t &gt; data)=0</argsstring>
        <name>write</name>
        <reimplementedby refid="classjac_1_1RouterOutputStreamCommunicator_1a0a5fd5a0766be7c326c68ae74f19cbdd">write</reimplementedby>
        <param>
          <type>std::span&lt; const uint8_t &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Write a buffer to the stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to write </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes put </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="35" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1OutputStreamCommunicator_1a3e2d99f27118efe0b6bcb585443ecd8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void jac::OutputStreamCommunicator::setRecipients</definition>
        <argsstring>(std::vector&lt; int &gt; recipients)=0</argsstring>
        <name>setRecipients</name>
        <reimplementedby refid="classjac_1_1RouterOutputStreamCommunicator_1a8aa66c91f11eeaee6b0b886e742033ae">setRecipients</reimplementedby>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>recipients</declname>
        </param>
        <briefdescription>
<para>Set the data links the stream should be sent to. Empty links for broadcast. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>recipients</parametername>
</parameternamelist>
<parameterdescription>
<para>the data link ids </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="42" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1OutputStreamCommunicator_1ae142e3fb63bddfab1dcc72fec98d699b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>jac::OutputStreamCommunicator::OutputStreamCommunicator</definition>
        <argsstring>()=default</argsstring>
        <name>OutputStreamCommunicator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="44" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1OutputStreamCommunicator_1a515321f6600ac4fc1b148bd17967fca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>jac::OutputStreamCommunicator::OutputStreamCommunicator</definition>
        <argsstring>(const OutputStreamCommunicator &amp;)=delete</argsstring>
        <name>OutputStreamCommunicator</name>
        <param>
          <type>const <ref refid="classjac_1_1OutputStreamCommunicator" kindref="compound">OutputStreamCommunicator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="45" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1OutputStreamCommunicator_1a0fd247b087928f7f8b947b789f477fff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classjac_1_1OutputStreamCommunicator" kindref="compound">OutputStreamCommunicator</ref> &amp;</type>
        <definition>OutputStreamCommunicator&amp; jac::OutputStreamCommunicator::operator=</definition>
        <argsstring>(const OutputStreamCommunicator &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classjac_1_1OutputStreamCommunicator" kindref="compound">OutputStreamCommunicator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="46" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1OutputStreamCommunicator_1a0ac8941b6a2074094c56bbadac441f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual jac::OutputStreamCommunicator::~OutputStreamCommunicator</definition>
        <argsstring>()=default</argsstring>
        <name>~OutputStreamCommunicator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="47" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Communicator interface that can be used send stream data. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>jac::OutputStreamCommunicator</label>
        <link refid="classjac_1_1OutputStreamCommunicator"/>
      </node>
      <node id="2">
        <label>jac::RouterOutputStreamCommunicator</label>
        <link refid="classjac_1_1RouterOutputStreamCommunicator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/jac/link/communicator.h" line="19" column="1" bodyfile="src/jac/link/communicator.h" bodystart="19" bodyend="48"/>
    <listofallmembers>
      <member refid="classjac_1_1OutputStreamCommunicator_1a0fd247b087928f7f8b947b789f477fff" prot="public" virt="non-virtual"><scope>jac::OutputStreamCommunicator</scope><name>operator=</name></member>
      <member refid="classjac_1_1OutputStreamCommunicator_1ae142e3fb63bddfab1dcc72fec98d699b" prot="public" virt="non-virtual"><scope>jac::OutputStreamCommunicator</scope><name>OutputStreamCommunicator</name></member>
      <member refid="classjac_1_1OutputStreamCommunicator_1a515321f6600ac4fc1b148bd17967fca1" prot="public" virt="non-virtual"><scope>jac::OutputStreamCommunicator</scope><name>OutputStreamCommunicator</name></member>
      <member refid="classjac_1_1OutputStreamCommunicator_1a4bf9e5a3b02c726c9d2d52bf22431e38" prot="public" virt="pure-virtual"><scope>jac::OutputStreamCommunicator</scope><name>put</name></member>
      <member refid="classjac_1_1OutputStreamCommunicator_1a3e2d99f27118efe0b6bcb585443ecd8d" prot="public" virt="pure-virtual"><scope>jac::OutputStreamCommunicator</scope><name>setRecipients</name></member>
      <member refid="classjac_1_1OutputStreamCommunicator_1a3a33987605fdbf76e47d21f2d54a2e46" prot="public" virt="pure-virtual"><scope>jac::OutputStreamCommunicator</scope><name>write</name></member>
      <member refid="classjac_1_1OutputStreamCommunicator_1a0ac8941b6a2074094c56bbadac441f73" prot="public" virt="virtual"><scope>jac::OutputStreamCommunicator</scope><name>~OutputStreamCommunicator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
