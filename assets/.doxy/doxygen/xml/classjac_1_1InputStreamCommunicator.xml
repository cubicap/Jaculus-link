<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classjac_1_1InputStreamCommunicator" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>jac::InputStreamCommunicator</compoundname>
    <derivedcompoundref refid="classjac_1_1RouterInputStreamCommunicator" prot="public" virt="non-virtual">jac::RouterInputStreamCommunicator</derivedcompoundref>
    <includes refid="communicator_8h" local="no">communicator.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classjac_1_1InputStreamCommunicator_1a3453eb3ac7913e5b8706c8b5ac22692f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int jac::InputStreamCommunicator::get</definition>
        <argsstring>()=0</argsstring>
        <name>get</name>
        <reimplementedby refid="classjac_1_1RouterInputStreamCommunicator_1a413ed8eb31d5c69ecc3c79d1d7cc489a">get</reimplementedby>
        <briefdescription>
<para>Get a single byte from the stream. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method blocks until data is available.</para>
</simplesect>
<simplesect kind="return"><para>the byte or -1 if no data is available </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="62" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1InputStreamCommunicator_1a36b8ae1a223d448392df6864b478eb47" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t jac::InputStreamCommunicator::read</definition>
        <argsstring>(std::span&lt; uint8_t &gt; data)=0</argsstring>
        <name>read</name>
        <reimplementedby refid="classjac_1_1RouterInputStreamCommunicator_1a19a1034d36958818dd3321425ada759d">read</reimplementedby>
        <param>
          <type>std::span&lt; uint8_t &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Read data from the stream. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method blocks until data is available.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to read into </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="71" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1InputStreamCommunicator_1a99cc98836aaedd3fcaeeecefe965d047" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t jac::InputStreamCommunicator::available</definition>
        <argsstring>()=0</argsstring>
        <name>available</name>
        <reimplementedby refid="classjac_1_1RouterInputStreamCommunicator_1abd88afa2d6d8b0ffe70f49b067ebad5c">available</reimplementedby>
        <briefdescription>
<para>Get the number of bytes available to read. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="78" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1InputStreamCommunicator_1ae3c4c0ca10731a8349518c640c045c35" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void jac::InputStreamCommunicator::filter</definition>
        <argsstring>(std::set&lt; int &gt; links)=0</argsstring>
        <name>filter</name>
        <reimplementedby refid="classjac_1_1RouterInputStreamCommunicator_1a21edea876fe8c2f51759f4fc8cef2e82">filter</reimplementedby>
        <param>
          <type>std::set&lt; int &gt;</type>
          <declname>links</declname>
        </param>
        <briefdescription>
<para>Set filter to only receive data from the given data links. Empty links for any. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>links</parametername>
</parameternamelist>
<parameterdescription>
<para>the data link ids </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="85" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1InputStreamCommunicator_1aa5510ebf7eaecf44ae4653f84128927a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void jac::InputStreamCommunicator::clear</definition>
        <argsstring>()=0</argsstring>
        <name>clear</name>
        <reimplementedby refid="classjac_1_1RouterInputStreamCommunicator_1a995fc1c369ce4f5f60fa61b783174113">clear</reimplementedby>
        <briefdescription>
<para>Clear the buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="90" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1InputStreamCommunicator_1a06221040cc8b35199a709069b35e7cc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void jac::InputStreamCommunicator::cancelRead</definition>
        <argsstring>()=0</argsstring>
        <name>cancelRead</name>
        <reimplementedby refid="classjac_1_1RouterInputStreamCommunicator_1a7554d6f834b113a88188c3cb9d08cb23">cancelRead</reimplementedby>
        <briefdescription>
<para>Cancel any blocking read. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="95" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1InputStreamCommunicator_1ab05c84639995e4073dbbad66105025f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>jac::InputStreamCommunicator::InputStreamCommunicator</definition>
        <argsstring>()=default</argsstring>
        <name>InputStreamCommunicator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="97" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1InputStreamCommunicator_1a6d8c4a6d46e75fc7866c9b50457111e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>jac::InputStreamCommunicator::InputStreamCommunicator</definition>
        <argsstring>(const InputStreamCommunicator &amp;)=delete</argsstring>
        <name>InputStreamCommunicator</name>
        <param>
          <type>const <ref refid="classjac_1_1InputStreamCommunicator" kindref="compound">InputStreamCommunicator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="98" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1InputStreamCommunicator_1a61a8c2e538b57f30f10845d85055d9e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classjac_1_1InputStreamCommunicator" kindref="compound">InputStreamCommunicator</ref> &amp;</type>
        <definition>InputStreamCommunicator&amp; jac::InputStreamCommunicator::operator=</definition>
        <argsstring>(const InputStreamCommunicator &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classjac_1_1InputStreamCommunicator" kindref="compound">InputStreamCommunicator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="99" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1InputStreamCommunicator_1a8712212825cced2147d67458bd6bb339" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual jac::InputStreamCommunicator::~InputStreamCommunicator</definition>
        <argsstring>()=default</argsstring>
        <name>~InputStreamCommunicator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/communicator.h" line="100" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Communicator interface that can be used to receive stream data. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>jac::RouterInputStreamCommunicator</label>
        <link refid="classjac_1_1RouterInputStreamCommunicator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>jac::InputStreamCommunicator</label>
        <link refid="classjac_1_1InputStreamCommunicator"/>
      </node>
    </inheritancegraph>
    <location file="src/jac/link/communicator.h" line="54" column="1" bodyfile="src/jac/link/communicator.h" bodystart="54" bodyend="101"/>
    <listofallmembers>
      <member refid="classjac_1_1InputStreamCommunicator_1a99cc98836aaedd3fcaeeecefe965d047" prot="public" virt="pure-virtual"><scope>jac::InputStreamCommunicator</scope><name>available</name></member>
      <member refid="classjac_1_1InputStreamCommunicator_1a06221040cc8b35199a709069b35e7cc9" prot="public" virt="pure-virtual"><scope>jac::InputStreamCommunicator</scope><name>cancelRead</name></member>
      <member refid="classjac_1_1InputStreamCommunicator_1aa5510ebf7eaecf44ae4653f84128927a" prot="public" virt="pure-virtual"><scope>jac::InputStreamCommunicator</scope><name>clear</name></member>
      <member refid="classjac_1_1InputStreamCommunicator_1ae3c4c0ca10731a8349518c640c045c35" prot="public" virt="pure-virtual"><scope>jac::InputStreamCommunicator</scope><name>filter</name></member>
      <member refid="classjac_1_1InputStreamCommunicator_1a3453eb3ac7913e5b8706c8b5ac22692f" prot="public" virt="pure-virtual"><scope>jac::InputStreamCommunicator</scope><name>get</name></member>
      <member refid="classjac_1_1InputStreamCommunicator_1ab05c84639995e4073dbbad66105025f3" prot="public" virt="non-virtual"><scope>jac::InputStreamCommunicator</scope><name>InputStreamCommunicator</name></member>
      <member refid="classjac_1_1InputStreamCommunicator_1a6d8c4a6d46e75fc7866c9b50457111e6" prot="public" virt="non-virtual"><scope>jac::InputStreamCommunicator</scope><name>InputStreamCommunicator</name></member>
      <member refid="classjac_1_1InputStreamCommunicator_1a61a8c2e538b57f30f10845d85055d9e8" prot="public" virt="non-virtual"><scope>jac::InputStreamCommunicator</scope><name>operator=</name></member>
      <member refid="classjac_1_1InputStreamCommunicator_1a36b8ae1a223d448392df6864b478eb47" prot="public" virt="pure-virtual"><scope>jac::InputStreamCommunicator</scope><name>read</name></member>
      <member refid="classjac_1_1InputStreamCommunicator_1a8712212825cced2147d67458bd6bb339" prot="public" virt="virtual"><scope>jac::InputStreamCommunicator</scope><name>~InputStreamCommunicator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
