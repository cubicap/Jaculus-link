<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classjac_1_1Router" kind="class" language="C++" prot="public">
    <compoundname>jac::Router</compoundname>
    <includes refid="router_8h" local="no">router.h</includes>
    <innerclass refid="classjac_1_1Router_1_1Handle" prot="public">jac::Router::Handle</innerclass>
    <innerclass refid="classjac_1_1Router_1_1MulticastPacket" prot="private">jac::Router::MulticastPacket</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classjac_1_1Router_1a4da8be0e4637d38b9561bba04016ced5" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; uint8_t, std::reference_wrapper&lt; <ref refid="classjac_1_1Consumer" kindref="compound">Consumer</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;uint8_t, std::reference_wrapper&lt;Consumer&gt; &gt; jac::Router::_channelConsumers</definition>
        <argsstring></argsstring>
        <name>_channelConsumers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/router.h" line="24" column="24" bodyfile="src/jac/link/router.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjac_1_1Router_1a5c4e4bc87299013ae7b55f516cd17851" prot="private" static="no" mutable="no">
        <type>std::function&lt; void(int linkId, uint8_t channel, std::span&lt; const uint8_t &gt; data)&gt;</type>
        <definition>std::function&lt;void(int linkId, uint8_t channel, std::span&lt;const uint8_t&gt; data)&gt; jac::Router::_global</definition>
        <argsstring></argsstring>
        <name>_global</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/router.h" line="25" column="19" bodyfile="src/jac/link/router.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classjac_1_1Router_1a21217d302e0da4e0d0fac05d2c4b124e" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; int, std::reference_wrapper&lt; <ref refid="classjac_1_1DataLinkTx" kindref="compound">DataLinkTx</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;int, std::reference_wrapper&lt;DataLinkTx&gt; &gt; jac::Router::_many</definition>
        <argsstring></argsstring>
        <name>_many</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/router.h" line="26" column="24" bodyfile="src/jac/link/router.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classjac_1_1Router_1a1a1830d8e5af61a950ee2627948fa3bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>jac::Router::Router</definition>
        <argsstring>()=default</argsstring>
        <name>Router</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/router.h" line="119" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1Router_1ab57e5102eb86edee4af99b3899a3f2d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>jac::Router::Router</definition>
        <argsstring>(const Router &amp;)=delete</argsstring>
        <name>Router</name>
        <param>
          <type>const <ref refid="classjac_1_1Router" kindref="compound">Router</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/router.h" line="120" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1Router_1a9377077f5c5451cf033b2de3da3e7084" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>jac::Router::Router</definition>
        <argsstring>(Router &amp;&amp;)=delete</argsstring>
        <name>Router</name>
        <param>
          <type><ref refid="classjac_1_1Router" kindref="compound">Router</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/router.h" line="121" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1Router_1aa0f1270edc6b56760bdeee7936535924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classjac_1_1Router" kindref="compound">Router</ref> &amp;</type>
        <definition>Router&amp; jac::Router::operator=</definition>
        <argsstring>(const Router &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classjac_1_1Router" kindref="compound">Router</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/router.h" line="122" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1Router_1a8f9ed3130c67fb4b3b02b2a55bef2a75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classjac_1_1Router" kindref="compound">Router</ref> &amp;</type>
        <definition>Router&amp; jac::Router::operator=</definition>
        <argsstring>(Router &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classjac_1_1Router" kindref="compound">Router</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/router.h" line="123" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1Router_1aedec4abfa05c3040e70d2030930eeeaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void jac::Router::setGlobalCallback</definition>
        <argsstring>(std::function&lt; void(int linkId, uint8_t channel, std::span&lt; const uint8_t &gt; data)&gt; callback)</argsstring>
        <name>setGlobalCallback</name>
        <param>
          <type>std::function&lt; void(int linkId, uint8_t channel, std::span&lt; const uint8_t &gt; data)&gt;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set global callback which is called whenever a packet is received on any channel and data link. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/router.h" line="130" column="10" bodyfile="src/jac/link/router.h" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1Router_1a61f88bc0436a7722a80d0c6c3a45804d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t jac::Router::maxPacketSize</definition>
        <argsstring>(uint8_t channel, std::vector&lt; int &gt; links)</argsstring>
        <name>maxPacketSize</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>links</declname>
        </param>
        <briefdescription>
<para>Get the maximum packet size for a channel and data links. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>links</parametername>
</parameternamelist>
<parameterdescription>
<para>the data links </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The maximum packet size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/router.h" line="141" column="12" bodyfile="src/jac/link/router.h" bodystart="141" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1Router_1aff72bf78206e0a692e0b9b4d50cfb062" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classjac_1_1Packet" kindref="compound">Packet</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Packet&gt; jac::Router::buildPacket</definition>
        <argsstring>(uint8_t channel, std::vector&lt; int &gt; links)</argsstring>
        <name>buildPacket</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>links</declname>
        </param>
        <briefdescription>
<para>Build a packet for a channel and data links. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>links</parametername>
</parameternamelist>
<parameterdescription>
<para>the data links </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The packet </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/router.h" line="167" column="21" bodyfile="src/jac/link/router.h" bodystart="167" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1Router_1a7ae29fa8ae0f021307849025dd800d14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classjac_1_1Router_1_1Handle" kindref="compound">Handle</ref></type>
        <definition>Handle jac::Router::subscribeTx</definition>
        <argsstring>(int id, DataLinkTx &amp;tx)</argsstring>
        <name>subscribeTx</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classjac_1_1DataLinkTx" kindref="compound">DataLinkTx</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <briefdescription>
<para>Subscribe a data link transmitter to the router. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This allows router to send packets to the data link id. Reciever should be then bound to the returned handle.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>id of the data link </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tx</parametername>
</parameternamelist>
<parameterdescription>
<para>the transmitter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/router.h" line="190" column="12" bodyfile="src/jac/link/router.h" bodystart="190" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1Router_1ae4caba90256d53b52d9a4d022831ab8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void jac::Router::subscribeChannel</definition>
        <argsstring>(uint8_t channel, Consumer &amp;consumer)</argsstring>
        <name>subscribeChannel</name>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="classjac_1_1Consumer" kindref="compound">Consumer</ref> &amp;</type>
          <declname>consumer</declname>
        </param>
        <briefdescription>
<para>Subscribe a channel to a consumer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>All packets received on the channel will be passed to the consumer.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>consumer</parametername>
</parameternamelist>
<parameterdescription>
<para>the consumer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/router.h" line="206" column="10" bodyfile="src/jac/link/router.h" bodystart="206" bodyend="212"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A router that can route packets from multiple data links to to consumers on specific channels. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/jac/link/router.h" line="23" column="1" bodyfile="src/jac/link/router.h" bodystart="23" bodyend="213"/>
    <listofallmembers>
      <member refid="classjac_1_1Router_1a4da8be0e4637d38b9561bba04016ced5" prot="private" virt="non-virtual"><scope>jac::Router</scope><name>_channelConsumers</name></member>
      <member refid="classjac_1_1Router_1a5c4e4bc87299013ae7b55f516cd17851" prot="private" virt="non-virtual"><scope>jac::Router</scope><name>_global</name></member>
      <member refid="classjac_1_1Router_1a21217d302e0da4e0d0fac05d2c4b124e" prot="private" virt="non-virtual"><scope>jac::Router</scope><name>_many</name></member>
      <member refid="classjac_1_1Router_1aff72bf78206e0a692e0b9b4d50cfb062" prot="public" virt="non-virtual"><scope>jac::Router</scope><name>buildPacket</name></member>
      <member refid="classjac_1_1Router_1a61f88bc0436a7722a80d0c6c3a45804d" prot="public" virt="non-virtual"><scope>jac::Router</scope><name>maxPacketSize</name></member>
      <member refid="classjac_1_1Router_1aa0f1270edc6b56760bdeee7936535924" prot="public" virt="non-virtual"><scope>jac::Router</scope><name>operator=</name></member>
      <member refid="classjac_1_1Router_1a8f9ed3130c67fb4b3b02b2a55bef2a75" prot="public" virt="non-virtual"><scope>jac::Router</scope><name>operator=</name></member>
      <member refid="classjac_1_1Router_1a1a1830d8e5af61a950ee2627948fa3bf" prot="public" virt="non-virtual"><scope>jac::Router</scope><name>Router</name></member>
      <member refid="classjac_1_1Router_1ab57e5102eb86edee4af99b3899a3f2d0" prot="public" virt="non-virtual"><scope>jac::Router</scope><name>Router</name></member>
      <member refid="classjac_1_1Router_1a9377077f5c5451cf033b2de3da3e7084" prot="public" virt="non-virtual"><scope>jac::Router</scope><name>Router</name></member>
      <member refid="classjac_1_1Router_1aedec4abfa05c3040e70d2030930eeeaf" prot="public" virt="non-virtual"><scope>jac::Router</scope><name>setGlobalCallback</name></member>
      <member refid="classjac_1_1Router_1ae4caba90256d53b52d9a4d022831ab8d" prot="public" virt="non-virtual"><scope>jac::Router</scope><name>subscribeChannel</name></member>
      <member refid="classjac_1_1Router_1a7ae29fa8ae0f021307849025dd800d14" prot="public" virt="non-virtual"><scope>jac::Router</scope><name>subscribeTx</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
