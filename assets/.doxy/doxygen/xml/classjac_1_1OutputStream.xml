<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classjac_1_1OutputStream" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>jac::OutputStream</compoundname>
    <derivedcompoundref refid="classjac_1_1Duplex" prot="public" virt="non-virtual">jac::Duplex</derivedcompoundref>
    <includes refid="stream_8h" local="no">stream.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classjac_1_1OutputStream_1a2d287dd1b99377e139b733b6e262222e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool jac::OutputStream::put</definition>
        <argsstring>(uint8_t c)=0</argsstring>
        <name>put</name>
        <reimplementedby refid="classjac_1_1Duplexify_1a34db88da88a12f3c55134dad5363fd16">put</reimplementedby>
        <param>
          <type>uint8_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Write a single byte to the stream. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method should not block.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the byte was written, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/stream.h" line="58" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1OutputStream_1af657d42bb042094ee3d8dfbe2b7a4986" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t jac::OutputStream::write</definition>
        <argsstring>(std::span&lt; const uint8_t &gt; data)=0</argsstring>
        <name>write</name>
        <reimplementedby refid="classjac_1_1Duplexify_1ace21696ec769356a92ef0dcbd0e23844">write</reimplementedby>
        <param>
          <type>std::span&lt; const uint8_t &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Write a buffer to the stream. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method should not block.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to write </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes written </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/stream.h" line="67" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1OutputStream_1a0f92c299e35e9dd93b5b63970c404669" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool jac::OutputStream::flush</definition>
        <argsstring>()=0</argsstring>
        <name>flush</name>
        <reimplementedby refid="classjac_1_1Duplexify_1a8dc96ed65bbc9bbba80efc901eb3c691">flush</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/stream.h" line="69" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classjac_1_1OutputStream_1a809391d8351043eaea9e48886a753313" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual jac::OutputStream::~OutputStream</definition>
        <argsstring>()=default</argsstring>
        <name>~OutputStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/jac/link/stream.h" line="71" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for a binary output stream. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>jac::Duplex</label>
        <link refid="classjac_1_1Duplex"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>jac::OutputStream</label>
        <link refid="classjac_1_1OutputStream"/>
      </node>
      <node id="3">
        <label>jac::Duplexify</label>
        <link refid="classjac_1_1Duplexify"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/jac/link/stream.h" line="49" column="1" bodyfile="src/jac/link/stream.h" bodystart="49" bodyend="72"/>
    <listofallmembers>
      <member refid="classjac_1_1OutputStream_1a0f92c299e35e9dd93b5b63970c404669" prot="public" virt="pure-virtual"><scope>jac::OutputStream</scope><name>flush</name></member>
      <member refid="classjac_1_1OutputStream_1a2d287dd1b99377e139b733b6e262222e" prot="public" virt="pure-virtual"><scope>jac::OutputStream</scope><name>put</name></member>
      <member refid="classjac_1_1OutputStream_1af657d42bb042094ee3d8dfbe2b7a4986" prot="public" virt="pure-virtual"><scope>jac::OutputStream</scope><name>write</name></member>
      <member refid="classjac_1_1OutputStream_1a809391d8351043eaea9e48886a753313" prot="public" virt="virtual"><scope>jac::OutputStream</scope><name>~OutputStream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
